import React, { useEffect, useState } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { useCookies } from 'react-cookie';
import { faFacebook, faInstagram, faTwitter } from '@fortawesome/free-brands-svg-icons';
import { logo } from '../assets';
import { parseCookies } from 'nookies';
import { Card, FormField, Loader } from '../components';
const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return (
      data.map((post) => <Card key={post._id} {...post} />)
    );
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};
export default function AllPosts() {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState('');
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);
  const [cookies] = useCookies(['name']);
  const [name, setName] = useState("");

  useEffect(() => {
    console.log("cookies.name:", cookies.name); // Check the value of cookies.name
    if (cookies.name) {
      const splitName = cookies.name.split('@');
      console.log("splitName:", splitName); // Check the result of splitting
      setName(splitName[0]);
    }
  }, [cookies.name]);



  const cookies2 = parseCookies();
  const userId = cookies2.userId;
  const fetchPosts = async () => {
    setLoading(true);
    if (!userId) {
      window.location.href = '/signin';
    }

    // Retrieve userId from cookie


    // alert(userId);

    try {
      const response = await fetch('https://imagebackend.vercel.app/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'userId': userId // Include userId in the request headers
        },
      });

      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      } else {
        // Handle error responses
        const errorMessage = await response.text();
        alert(`Error: ${errorMessage}`);
      }
    } catch (err) {
      console.error('Error:', err);
      alert('An error occurred. Please try again.');
    } finally {
      setLoading(false);
    }
  };


  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );
  };
  return (
    (userId && <div className='bg-white'>
      <section className="max-w-7xl mx-auto bg-white ">
        <div className='bg-white'>
          <h1 className="font-extrabold text-[#222328] text-[32px]">Hi {name},</h1>
          <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
        </div>

        <div className="mt-16">
          <FormField
            labelName="Search posts"
            type="text"
            name="text"
            placeholder="Search something..."
            value={searchText}
            handleChange={handleSearchChange}
          />
        </div>

        <div className="mt-10">
          {loading ? (
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          ) : (
            <>
              {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">
                  Showing Resuls for <span className="text-[#222328]">{searchText}</span>:
                </h2>
              )}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                  <RenderCards
                    data={searchedResults}
                    title="No Search Results Found"
                  />
                ) : (
                  <RenderCards
                    data={allPosts}
                    title="No Posts Yet"
                  />
                )}
              </div>
            </>
          )}
        </div>
      </section>
      <footer className="bg-black py-8 px-6">
        <div className="max-w-7xl mx-auto flex flex-col sm:flex-row pb-4 justify-between gap-9 justify-around items-center">
          <div className='logo'>
            <a href="/">
              <img src={logo} alt="logo" className="w-32 ml-2 object-contain bg-white py-6 px-4" />
            </a>
          </div>
          <div className="space-x-4">

            <a href="#" className="text-white justify-between flex mt-2 hover:text-gray-400 transition-colors duration-300">
              <FontAwesomeIcon icon={faFacebook} size="2x" />
              <h1>Facebook</h1>
            </a>
            <a href="#" className="text-white justify-between flex mt-2 hover:text-gray-400 transition-colors duration-300">
              <FontAwesomeIcon icon={faInstagram} size="2x" />
              <h1 className='ml-4'>Instagram</h1>
            </a>
            <a href="#" className="text-white justify-between flex mt-2 hover:text-gray-400 transition-colors duration-300">
              <FontAwesomeIcon icon={faTwitter} size="2x" />
              <h1>Twitter</h1>
            </a>
          </div>
          {/* Email subscription */}
          <div className="mt-4 flex">

            <div className="flex-grow">
              <input type="email" className="w-full px-4 py-2 rounded-l-lg focus:outline-none" placeholder="Your email address" />
            </div>
            <div>
              <button className="bg-red-500 hover:bg-black text-white px-6 py-2 rounded-r-lg transition-colors duration-300">
                Subscribe
              </button>
            </div>
          </div>
        </div>
        <hr />
        <div className="copyright text-center pt-3 text-white">
          <p>&copy; 2024 Your Company Name. All rights reserved.</p>
        </div>
      </footer>
    </div>)
  )
}
